.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download__examples_03_inversion_postprocessing_plot_01_inversion_results.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_03_inversion_postprocessing_plot_01_inversion_results.py:


Plot inversion results from a tomodir
=====================================




.. code-block:: python

    import crtomo

    tdm = crtomo.tdMan(tomodir='tomodir')





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    importing tomodir tomodir
    This grid was sorted using CutMcK. The nodes were resorted!
    Triangular grid found
    importing tomodir results
    loaded configs: (220, 2)
    tomodir/inv/
    is robust True
    res_m.diag not found: tomodir/inv/res_m.diag
    /home/mweigand/Programme/CRTomo/crtomo_tools/examples/03_inversion_postprocessing


Plot the last magnitude and phase iteration the quick and dirty way.
Note that all iterations are stored in the tdm.a['inversion'][KEY] list



.. code-block:: python

    tdm.show_parset(tdm.a['inversion']['rmag'][-1])
    tdm.show_parset(tdm.a['inversion']['rpha'][-1])



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/03_inversion_postprocessing/images/sphx_glr_plot_01_inversion_results_001.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/03_inversion_postprocessing/images/sphx_glr_plot_01_inversion_results_002.png
            :class: sphx-glr-multi-img




Let's do this the nice way (for phase values only)



.. code-block:: python

    import pylab as plt
    # extract parameter set ids
    pid_pha = tdm.a['inversion']['rpha'][-1]

    fig, ax = plt.subplots(1, 1, figsize=(16 / 2.54, 7 / 2.54))
    tdm.plot.plot_elements_to_ax(
        cid=pid_pha,
        ax=ax,
        plot_colorbar=True,
        xmin=-0.5,
        xmax=4,
        zmin=-1.5,
        cblabel=r'$\phi [mrad]$',
    )




.. image:: /_examples/03_inversion_postprocessing/images/sphx_glr_plot_01_inversion_results_003.png
    :class: sphx-glr-single-img




Create a depth cut at x = 4 m, down to 2 m depth



.. code-block:: python

    pid_pha = tdm.a['inversion']['rpha'][-1]
    results = tdm.parman.extract_along_line(pid_pha, [4, -2], [4, 0])
    # x y value
    print(results)

    import pylab as plt
    fig, ax = plt.subplots()
    ax.plot(-results[:, 2], results[:, 1], '.-')
    ax.set_xlabel(r'$-\phi [mrad]$')
    ax.set_ylabel('depth [m]')



.. image:: /_examples/03_inversion_postprocessing/images/sphx_glr_plot_01_inversion_results_004.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [[ 4.         -2.         -2.83203673]
     [ 4.         -1.77777778 -2.8332653 ]
     [ 4.         -1.55555556 -2.79631186]
     [ 4.         -1.33333333 -2.70289278]
     [ 4.         -1.11111111 -2.74071026]
     [ 4.         -0.88888889 -2.90602112]
     [ 4.         -0.66666667 -3.2129612 ]
     [ 4.         -0.44444444 -3.61308575]
     [ 4.         -0.22222222 -4.30371428]
     [ 4.          0.         -4.55699587]]



.. _sphx_glr_download__examples_03_inversion_postprocessing_plot_01_inversion_results.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_01_inversion_results.py <plot_01_inversion_results.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_01_inversion_results.ipynb <plot_01_inversion_results.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
