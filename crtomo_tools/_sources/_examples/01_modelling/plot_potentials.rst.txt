.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download__examples_01_modelling_plot_potentials.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_01_modelling_plot_potentials.py:


Plot a potential distribution, computed with CRMod
==================================================




create a tomodir object



.. code-block:: python

    import crtomo
    grid = crtomo.crt_grid('grid_surface/elem.dat', 'grid_surface/elec.dat')
    td = crtomo.tdMan(grid=grid)





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    This grid was sorted using CutMcK. The nodes were resorted!
    Triangular grid found


define configurations



.. code-block:: python

    import numpy as np
    td.configs.add_to_configs(
        np.array((
            (1, 10, 5, 7),
            (1, 3, 10, 7),
        ))
    )







add a homogeneous forward model



.. code-block:: python

    td.add_homogeneous_model(100, 0)







compute FEM solution using CRMod



.. code-block:: python

    td.model(potentials=True)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    attempting modeling
    reading voltages
    reading potentials


plot first quadrupole



.. code-block:: python

    pot_mag, pot_pha = td.get_potential(0)

    # add node data to the parameter manager
    nid = td.nodeman.add_data(pot_mag)
    # TODO: is this the phase, or imaginary part of the potential?
    nid_pha = td.nodeman.add_data(pot_pha)

    # plot
    import pylab as plt
    fig, axes = plt.subplots(2, 1, figsize=(16 / 2.54, 8 / 2.54))

    ax = axes[0]
    td.plot.plot_nodes_pcolor_to_ax(
        ax,
        nid,
        plot_colorbar=True,
    )
    # td.plot.plot_nodes_contour_to_ax(
    #     ax, nid,
    #     plot_colorbar=True,

    # )
    ax.set_aspect('equal')

    ax = axes[1]
    td.plot.plot_nodes_pcolor_to_ax(
        ax,
        nid_pha,
        plot_colorbar=True,
    )
    ax.set_aspect('equal')
    fig.savefig('test.pdf', bbox_inches='tight')



.. image:: /_examples/01_modelling/images/sphx_glr_plot_potentials_001.png
    :class: sphx-glr-single-img





.. _sphx_glr_download__examples_01_modelling_plot_potentials.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_potentials.py <plot_potentials.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_potentials.ipynb <plot_potentials.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
