.. note::
    :class: sphx-glr-download-link-note

    Click :ref:`here <sphx_glr_download__examples_01_modelling_plot_sensitivity.py>` to download the full example code
.. rst-class:: sphx-glr-example-title

.. _sphx_glr__examples_01_modelling_plot_sensitivity.py:


Plotting sensitivities
======================

Sensitivity distributions can be easily plotted using the tdMan class:


imports



.. code-block:: python

    import numpy as np
    import crtomo







create and save a FEM-grid



.. code-block:: python

    grid = crtomo.crt_grid.create_surface_grid(
        nr_electrodes=10, spacing=1,
        depth=4,
        char_lengths=0.2,
    )

    grid.plot_grid()

    grid.save_elem_file('elem.dat')
    grid.save_elec_file('elec.dat')




.. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_001.png
    :class: sphx-glr-single-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    This grid was sorted using CutMcK. The nodes were resorted!
    Triangular grid found


create the measurement configuration



.. code-block:: python

    configs = np.array((
        (1, 4, 10, 7),
    ))








for different background, plot the sensitivities



.. code-block:: python

    for bg in (1, 10, 100, 1000):
        td = crtomo.tdMan(grid=grid)
        td.configs.add_to_configs(configs)
        td.add_homogeneous_model(bg, 0)

        td.model(sensitivities=True)
        r = td.plot_sensitivity(0)
        r[0].savefig('sensitivity_bg_{}.pdf'.format(bg), bbox_inches='tight')
        r = td.plot_sensitivity(0, mag_only=True)
        r[0].savefig(
            'sensitivity_magonly_bg_{}.pdf'.format(bg), bbox_inches='tight')



.. rst-class:: sphx-glr-horizontal


    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_002.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_003.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_004.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_005.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_006.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_007.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_008.png
            :class: sphx-glr-multi-img

    *

      .. image:: /_examples/01_modelling/images/sphx_glr_plot_sensitivity_009.png
            :class: sphx-glr-multi-img


.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    attempting modeling
    reading voltages
    reading sensitivities
    attempting modeling
    reading voltages
    reading sensitivities
    attempting modeling
    reading voltages
    reading sensitivities
    attempting modeling
    reading voltages
    reading sensitivities


**Total running time of the script:** ( 0 minutes  26.103 seconds)


.. _sphx_glr_download__examples_01_modelling_plot_sensitivity.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download

     :download:`Download Python source code: plot_sensitivity.py <plot_sensitivity.py>`



  .. container:: sphx-glr-download

     :download:`Download Jupyter notebook: plot_sensitivity.ipynb <plot_sensitivity.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.readthedocs.io>`_
